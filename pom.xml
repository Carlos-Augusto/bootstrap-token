<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.flatmappable</groupId>
    <artifactId>bootstrap-token</artifactId>
    <version>0.0.1</version>
    <packaging>jar</packaging>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <name>bootstrap [${project.version}]</name>
    <description>Bootstrap Token Example</description>

    <developers>
        <developer>
            <name>Carlos Sanchez</name>
            <email>carlos.sanchezi@ubirch.com</email>
        </developer>
    </developers>

    <repositories>
        <repository>
            <id>snapshots-repo</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <properties>

        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <encoding>UTF-8</encoding>

        <ubirch-protocol.version>2.1.3-SNAPSHOT</ubirch-protocol.version>
        <ubirch-crypto.version>2.1.0</ubirch-crypto.version>

        <scala.version>2.13.0</scala.version>
        <scala.compat.version>2.13</scala.compat.version>
        <scala-maven-plugin.version>3.4.2</scala-maven-plugin.version>
        <scalatest.version>3.2.0</scalatest.version>
        <scala.logging.version>3.9.2</scala.logging.version>
        <scalariform.version>0.2.2</scalariform.version>
        <scalatest-maven-plugin.version>1.0</scalatest-maven-plugin.version>

        <slf4j.api.version>1.7.15</slf4j.api.version>
        <logback-classic.version>1.2.3</logback-classic.version>
        <log4j-over-slf4j.version>1.7.25</log4j-over-slf4j.version>
        <jcl-over-slf4j.version>1.7.25</jcl-over-slf4j.version>
        <logstash-logback-encoder.version>5.3</logstash-logback-encoder.version>

        <maven-jar-plugin.version>2.6</maven-jar-plugin.version>
        <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
        <maven-surefire-plugin.version>2.7</maven-surefire-plugin.version>

    </properties>

    <dependencies>

        <!-- https://mvnrepository.com/artifact/com.pauldijou/jwt-core -->
        <dependency>
            <groupId>com.pauldijou</groupId>
            <artifactId>jwt-core_2.13</artifactId>
            <version>4.2.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.bitbucket.b_c/jose4j -->
        <dependency>
            <groupId>org.bitbucket.b_c</groupId>
            <artifactId>jose4j</artifactId>
            <version>0.7.2</version>
        </dependency>

        <dependency>
            <groupId>com.ubirch</groupId>
            <artifactId>ubirch-client-scala_2.13</artifactId>
            <version>1.2.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.12</version>
        </dependency>
        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-core_${scala.compat.version}</artifactId>
            <version>3.6.6</version>
        </dependency>
        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-jackson_${scala.compat.version}</artifactId>
            <version>3.6.6</version>
        </dependency>
        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-ext_${scala.compat.version}</artifactId>
            <version>3.6.6</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>1.3.4</version>
        </dependency>
        <!-- Logging -->

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.api.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.scala-logging</groupId>
            <artifactId>scala-logging_${scala.compat.version}</artifactId>
            <version>${scala.logging.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- code formatting -->
            <plugin>
                <groupId>com.github.tashoyan</groupId>
                <artifactId>scalariform-maven-plugin</artifactId>
                <version>${scalariform.version}</version>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <configuration>
                            <firstArgumentOnNewline>Force</firstArgumentOnNewline>
                            <firstParameterOnNewline>Force</firstParameterOnNewline>
                            <allowParamGroupsOnNewlines>true</allowParamGroupsOnNewlines>
                            <danglingCloseParenthesis>Force</danglingCloseParenthesis>
                            <doubleIndentConstructorArguments>true</doubleIndentConstructorArguments>
                            <doubleIndentMethodDeclaration>true</doubleIndentMethodDeclaration>
                            <newlineAtEndOfFile>true</newlineAtEndOfFile>
                            <placeScaladocAsterisksBeneathSecondAsterisk>true
                            </placeScaladocAsterisksBeneathSecondAsterisk>
                            <singleCasePatternOnNewline>false</singleCasePatternOnNewline>
                            <spacesAroundMultiImports>true</spacesAroundMultiImports>
                            <rewriteArrowSymbols>false</rewriteArrowSymbols>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- code formatting -->

            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.flatmappable.Bootstrap</mainClass>
                            <useUniqueVersions>false</useUniqueVersions>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- see http://davidb.github.com/scala-maven-plugin -->
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scala-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                            <goal>add-source</goal>
                            <goal>doc-jar</goal>
                        </goals>
                        <configuration>
                            <args>
                                <arg>-deprecation
                                </arg>                      <!--  Emit warning and location for usages of deprecated APIs. -->
                                <arg>-encoding</arg>
                                <arg>utf-8</arg>        <!--  Specify character encoding used by source files. -->
                                <arg>-explaintypes
                                </arg>                     <!--  Explain type errors in more detail. -->
                                <arg>-feature
                                </arg>                          <!--  Emit warning and location for usages of features that should be imported explicitly. -->
                                <arg>-unchecked
                                </arg>                        <!--  Enable additional warnings where generated code depends on assumptions. -->
                                <arg>-Xcheckinit
                                </arg>                       <!--  Wrap field accessors to throw an exception on uninitialized access. -->
                                <arg>-Xfatal-warnings
                                </arg>                  <!--  Fail the compilation if there are any warnings. -->
                                <arg>-Xlint:adapted-args
                                </arg>               <!--  Warn if an argument list is modified to match the receiver. -->
                                <arg>-Xlint:constant
                                </arg>                   <!--  Evaluation of a constant arithmetic expression results in an error. -->
                                <arg>-Xlint:delayedinit-select</arg>         <!--  Selecting member of DelayedInit. -->
                                <arg>-Xlint:doc-detached
                                </arg>               <!--  A Scaladoc comment appears to be detached from its element. -->
                                <arg>-Xlint:inaccessible
                                </arg>               <!--  Warn about inaccessible types in method signatures. -->
                                <arg>-Xlint:infer-any
                                </arg>                  <!--  Warn when a type argument is inferred to be `Any`. -->
                                <arg>-Xlint:missing-interpolator
                                </arg>       <!--  A string literal appears to be missing an interpolator id. -->
                                <arg>-Xlint:nullary-override
                                </arg>           <!--  Warn when non-nullary `def f()' overrides nullary `def f'. -->
                                <arg>-Xlint:nullary-unit
                                </arg>               <!--  Warn when nullary methods return Unit. -->
                                <arg>-Xlint:option-implicit</arg>            <!--  Option.apply used implicit view. -->
                                <arg>-Xlint:package-object-classes
                                </arg>     <!--  Class or object defined in package object. -->
                                <arg>-Xlint:poly-implicit-overload
                                </arg>     <!--  Parameterized overloaded implicit methods are not visible as view bounds. -->
                                <arg>-Xlint:private-shadow
                                </arg>             <!--  A private field (or class parameter) shadows a superclass field. -->
                                <arg>-Xlint:stars-align
                                </arg>                <!--  Pattern sequence wildcard must align with sequence component. -->
                                <arg>-Xlint:type-parameter-shadow
                                </arg>      <!--  A local type parameter shadows a type already in scope. -->
                                <arg>-Ywarn-dead-code
                                </arg>                  <!--  Warn when dead code is identified. -->
                                <arg>-Ywarn-extra-implicit
                                </arg>             <!--  Warn when more than one implicit parameter section is defined. -->
                                <arg>-Ywarn-numeric-widen</arg>              <!--  Warn when numerics are widened. -->
                                <arg>-Ywarn-unused:implicits
                                </arg>           <!--  Warn if an implicit parameter is unused. -->
                                <arg>-Ywarn-unused:imports
                                </arg>             <!--  Warn if an import selector is not referenced. -->
                                <arg>-Ywarn-unused:locals
                                </arg>              <!--  Warn if a local definition is unused. -->
                                <arg>-Ywarn-unused:params
                                </arg>              <!--  Warn if a value parameter is unused. -->
                                <arg>-Ywarn-unused:patvars
                                </arg>             <!--  Warn if a variable bound in a pattern is unused. -->
                                <arg>-Ywarn-unused:privates
                                </arg>            <!--  Warn if a private member is unused. -->
                                <arg>-Ywarn-value-discard
                                </arg>              <!--  Warn when non-Unit expression results are unused. -->
                            </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
